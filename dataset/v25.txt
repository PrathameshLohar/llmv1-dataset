hello friends in this video we will seethe top 10 interview questions asked inapple interviews so let's see the firstproblemso it's two sum problem so in this youare given a list of numbers and then youare given a target and you have to picktwo two numbers which add up to thistargetand this is very popular and i wouldhave covered it in ourother top 10 videosso in this case you can see that 2 and11if you add them you get 13 so you haveto return the indices start and endand in this approach if you apply thebrute force in this problem you will getin o of n square because you pick thefirst number you try to find targetminus 2 that is 11.it this may not be part of the solutionso you may end up doing it for many ofsuch numbers and you may end uptrying to findn minus 1 plus n minus 2 so that sumwill apply and you will get of n squarebut in the optimized case you will useyou should use a hash setor a hashmapso thatwhenever you visit any number you storethat in the hash map so first time youvisit 2 you look for 11 in the hash mapthe remaining number you don't find itand you store 2 in the hash map with theindex 0then you go to 7 you look for theremaining one that is 6 you don't findit so you storeso 2 is stored at index 0 then 7 isstored at index 1 when you reach here at11 you look for 2 because the remainingnumber is 211 and the remaining is target minus 11so you look in the mapthen you find 2 at index 0. so youreturn 0 and the current index that is2.so in this way you will reduce the timecomplexity to o of n but you will have aspace complexity ofo of n as well due to the hash map nowlet's see the next problemit's called lru cache and again this isa very very popular design problemuh where it has been asked multipletimes in i think microsoft interviews aswell so i would have covered it there inthat videoso here you have to design an lru cashclass so that will take some defaultcapacitycash is not unlimited it will have somecapacity and you will need some policyto remove the keys once the cash is fulland here you would like to implement twoadditional methods put and getwhere get you would like to fetch thevalue corresponding to a given key ifpresent in the cacheso this would work in of oneand if not not present it will add thatto the cacheand thenyou have put method where you can put akey value pair in the cache and lrumeans least recently used so you shouldhave your eviction policy in such a waythatthe keys that areused very recently should be the one inthe queue and when you have to evictsome key from the cash then you willremove the ones which have not been usedforquite a long timeand this islead code problem number 146 theprevious one was lead code problemnumber onenow let's see the third problemit's called spiral matrix and you canfind the details in lead code problemnumber 54so let me go through it onceso you have to print the elements of mcross n matrix in spiral fashion so thisthere are m rowsand n columnsso you start from top left and go to theright so you visit like thisthen you when you reach the end you comedown you change the directionwhen you again reach the bottom you goleftand again go top but not to the top rowtill the second row top row is alreadywastedthen again turn rightand then you stop before the second lastrow so this process is repeateduntil all the elements are printedso you see what is the approach so youwill start from 0 0so you can have a few variables like topbottomso top will be initially 0bottom will be initiallym minus 1left will be 0 right will ben minus 1 the last call so initiallythat is the state and you startyou keep the row constant so it willhave some name this matrix let's say aso you are wasting the first row firstso first value will be always 0current row number so that is constantand what is changing the column numberso you are going from 0 all the way uptorightor rather this column number goes fromleftall the way up to rightso you have to putyou have to initialize your variablesthis way and once you reach theright most rightso this value is equal to right youchange the direction so now you aregoing down so your column is fixed nowwhen you are iterating these elementsone two three four all of them are inthe same row but their columns areincreasingincreasing from what to what increasingfromleft to right so initially left rightare 0 and n minus 1 respectively thenyou go fromdown you go from here secondrow tillbottomand againin this fashionso here uh right will be this startingvalue and left will bethis zeroand again you are going uptilluhsecond rowand again you go right so there are fouruhfour traversals in one loop you canthink of it as one loopone entire loopso you go right then bottom then leftthen right and this forms one loop soyou will have one outer loopwhere you are repeating these thingsleft to righttop to bottomright to leftand down to upand again after the end of this loop youchange everything so now leftyou reach here againso again you are starting movement inthe right directionbut fromone instead of zeroso instead of column number zero so nowyou're at the end of this loopthis outer loopleft should be incremented by oneright should be decremented by onebecause you will not go all the way upto last columnsimilarly when coming downyou will not go all the way up to lastrow but rather one lessso down should be uh minus minusand again while going up you would stopone rowbelow so up should be plus plusso if you do these things carefully youcan visitall the elementsand what will be the time complexityuh of course you have to visiteverything and you are not going to anycell twice so that should beo ofm n where m is the number of rows and nis the number of columnsso this is the time complexity in spaceyou are not using any extra space otherthan these few variables left right updownso o of 1and this is lead core problem number 54.now let's see the fourth problem it'scalled median of two sorted arrays it'salso very popular problem so you aregiven two arrays which are alreadysorted you have to find the median soby median we mean a number that dividesuha data set into exactlytwo parts so in this case we have onetwo three three five one twothreethreefiveso if you take this three any one ofthese threeor rather in this case it's odd numberso there is a definite midpoint so ifyou take this three there are twonumbers less than ittwo numbers greater than equal to thisso the median is threethe median may not always be presentlet's say we had one two threeand thenwe had 4but this 5 was not there so 1 2 3 4 thenthe median will be here2.5so in the case of even number we willhave two mid values so take the averageof that in the case of odd number ofvalues take the middle oneso if youadd all the elements and then find themedianthen that will bem plus n time if this has m elements andn elements these are already sorted soyou can merge them using merge step ofthe merge sortand that will take m plus n timeand then you just go to the middle oneor two middle and take the averagebut you are not using the fact thatthese are already sorted so you can doit in log of m plus n time rather thebest solution would be thatso log off the number of elements sothat will come from the fact that youhave let's saytwoarrays which are already sorted so youcompare their middle valuesand depending on that now these arethe fourhalves thatare formedso every time you will remove one oftheseuh four valuesso uh if initially we hadlet's say n then next time it will bethree n by fourroughly not exactlyand then againthree by four whole square nso it's decreasing by a factor of threeby four so you can think of it asroughly logarithmic timeso uh you can see the details on leadcode pagefor lead code problem number four nowlet's see the next problem it's calledfrog jumpso we have a few stones in this case sothese are the stones and this is atposition zeroand this is thefirst stone second stone so these arethe stonesandthese are denoting the indices ofstonesso here you seezero one so these are contiguous thereis a gap of just one unithere you have one three so there is agap of two stepsso this difference denotes steps so afrog has to go from first stone tilllastand you have to return true or falsewhether it's possible or not becausethere is some rule to how many steps afrog can takeso initially this frog will always takeone stepso if it's zero and two then that's notpossible so it has to be oneso it goes from zero to one one stepso at any point of time if the previousnumber of steps was sthen the next step next jump so previousjump was of s steps then the next jumpcan be eithers minus 1sor s plus 1 so these are the threepossibilities depending on the previousjump sizeso it cannot be arbitraryso you have to return whether it'spossible or not so here the frog willmake a jump of one unitthenit will reachat one herenow it's a gap of two then again a gapof 2 then a gap of 1then 6 to 8 there is a gap of 24 and 5. so i have written the stepsizes the jump sizes requiredso now the next jump should be either 00 does not make any sense it will keeponhaving here onlyso 10 and 2so here is a gap of 2 so it can jump by2 stepsso previous jump is two so now the nextjump can be either one two or threeso either it can come here one is alsoallowed and two is also allowedsorry uh 2 is allowed and 3 is alsoallowed so it can come here orstraight away here so out of these onlyone it has to takeso let's say it comes here at this 2thenit can again take one stepand then two stepsbutif it reaches here by two steps then itcannot reach here because it can takeonly one two or three but here it's agap of 4 so if it takes a jump of 3 thennext can be 2 3 or 4 but with 2 it willreach here so again it cannot reachthereso there is something wrong let's say wetake a jump of 2 hereand thenwe take a jump of three hereand take a jump of four here and then ajump of five so this would be the casenot this oneso uh in this case it's possible so it'strue if it was not possible let's say itwas 6 step behind or anywhere withinthen we would return falseso this is lead code problem number 403andif you use the knife approach theni would give a rough estimate like ateverypoint you have three optionseither takestep minus one step or step plus one soyou will have to try all the threepossibilities andthe solution may explode to 3 raised tothe power nor exponentialso you will have to use some sort ofdynamic programming toavoid calculating again fora step where you have reached withcertain stepsso uh try to solve that and try to usedynamic programming there so let's seethe next problemit's called add two numbers and thenumbers are stored in the singly linkedlist fashion and the numbers are storedin reverse order so this is 243 but itdenotes 342.so 342and the next one is 465.so what happens if you add them 708 so this 708 denotes 807so uh if the numbers are in normaladdition we add fromright to left least significant bitleast significant digit to mostsignificant digit in this case it'sreverse so you can start from left torightthat's for ease of usage since in thelinked list we havesingle link list we have access to theheadand we are allowed to go from left toright so you add 5 and 2 the value is 7there is no carry forward so carryforward is 0 then you go next next inboth the listsand you reach here 6 4 is 10 so you add0and 1 is carry forwardand then 4 3 7 and 1 8 so this may notbe always equal it may have let's say 5hereso it will denotethis oneso whenthis ends so you have to return a newlist you can justadd the carry valuesand just process this list because theother list has endedso what will would time complexity uh itwill be thebigger ofthe lists so if it is nm and this is n then the time will bethe longer onemax of mnand its lead code problem number twolet's see the next next one it's calledtrapping of rain water so we have a fewskyscrapers and there are some gaps sothese are denoting the heights of thosebuildingsso 0 1again 0and then 21 zero onethreeand these light colored are the watersso water can be trapped when it'senclosed byby buildings on both the sitesso this is lead code number 42so this is a very popular problem and itcomes under hard categoryso here you will have to keep track ofwhat is the left maximum like till thispoint leftthis is the current left so when you aregoing from left to right this is theleft index and max till now is zeroso if left is less than left maxthen only water can be trapped if leftitself is the taller buildingwater cannot be trapped above itso here can the water is not trappedleft max is zero and left is also zerothen you come here then this value ismore than max which was zero so left maxbecomes one and left is also one soagain no water here at this pointwhen we come here this value is zero butleft max is one so there is a differenceof one in the height so one unit ofwater can be trappedsimilarly you have to keep track of theright max also maybethis is less than left max but there isno building to the rightso again no water can be stored so youhave to keep track of right right maxleft left maxand you can do it inoneiteration so it can be a linear timeanda space would bejust constant one so now let's see thenext problemit's called number of islands again thisis a problem being repeated i would havealready covered in either microsoft oramazon interviews top 10 interviewsso here we have a four-way connectivityvertical and horizontalso if you see this is one islandagain one islandand one island is hereso these are not connected diagonalconnectivity is not there so one denotesland zero denotes water so you have toreturn this number of islands and it canbe done by a simplegraph traversaland that will take time equal to numberofcells number of rows and columns numberof nodesuh so this is lead code problem number200 so let's see the next problemit's called maximum sub array so this istheuh initial array which will havepositive and negative numbers if allnumbers are non-negative then themaximum sub-array would be definitelythe entire array but we have negativenumbers also so maybethis to this is let's say 10then we have minus 5 and let's say thispart is sum from of this server isuh6 so if you add everything you have anet plus 1so it will be 11 but let's say this was4this sub array and this server is 10 andthenthis server is minus 5so you will not add all of theseyou will pick this oneso that's how you have to find themaximum sub array and this is lead codenumber 53so let's see the next problemit's called find the median from datastream so you have a running stream ofdataand you have to find the running medianso you have to design the class medianfinder the constructor and you shouldhave a mechanism to add a new numberfrom the streamand then find the current median solet's say median finder it initializesthe constructor then we add 1then we add 2and then we find median so till thispoint we have 1 and 2 so the median is1.5then again we add 3and again call median so 1 2 3 so themedian is now 2so you can usea heap here to keep track of the runningmedianso i will not go into the detail of thesolution but you can think on that lineand this is lead code problem number 295so i hope these 10 problems would giveyou some enough starting point andenough practice to get startedif you are practicing for appleinterviewsso please subscribe the channel andthanks for watching