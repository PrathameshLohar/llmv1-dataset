so I guess we could start with some Iguess anonymous introductions yeah umsuredude do you want to start yeah so Iguess I'm a CS student senior studyingat college I did a couple of internshipsbefore and now I'm just sort of you knowprepping for a new grad roles great soI'm actually a software engineer myselfI've been working for about ten yearsand I like you know always be coding asI'm doing this all right um coolso I'm excited to chat with you thismorning do you want to jump right intothe technical questions sure I'm justgonna switch over the Python to thisthat's perfect all right so the Platinumgave you is something item is one of myfavorite I'm gonna just write theprogram statement here Terk forgivingthe anonymity straining and thedictionary of world please write afunction that can determine if you knowthis training can be basically composedout of the the words in the dictionaryright so just to make sure that Iunderstand this correctly I'm given saysome input string and I'm given somedictionary we kind entries so this isjust a set and I have to basicallyreturn you know the valid splittingright or dessert or return true or falseif there is a balance footing that worksout yeah okay so I'm pretty sure I havedone this problem before and what Ithink the approach ends up being is thatthis is a dynamic programming problemwhere youcan actually say store at each indexwhether you can actually say have aspaced eliminated set of words to thatpoint and what you basically end uphaving to do is going from index say 0to N and each time looking back andcomparing you know to figure out whetherat some intermediate index you can formword you look at all previous placeswhere you could form words and then seeif the substring formed from that pointto your current index is also word andif it is then you knowthe index is set to true right sothere's much more ways that you cansolve these so I think what you'redescribing sounds like one because wewere to do it can you map this out in anexample and what me for the solution isyou're talking aboutsure so let's say that I had an examplesuch as Facebook and my words were youknow Facebook pretend that it's a realword yeah what I basically have is anarray all set the false of length 8 or Iguess it's supposed to be 9 if it's nplus 1 that kind of educates we canhandle in actual code and basically Iwant to start from index 0 and check ifsay yeah I get I guess it would be nplus 1 because I would end up sayingthat from index 0 to 1 is that substringa character no it isn't I would try tobacktrack all the way and see all otherpossible sub strings but there are noother sub strings that could useprevious values so I move on check 0 0 22 it's not a word no it isn't they'llhave the same logic repeat 0 3 stillisn't 0 4 finally we get to face rightwe'll end up seeing that we can comethey're the substring or we can see it'sa substring face is inside of our setand when we find that it's true well atthis point have you know true falsefalse false true right our desolation Iguess another to dump in here this arewe boring us what does it it one realit's basically a boolean can be seenwhether you can do this if s 2 in can besegmented into space separated sequenceof one or more dictionary words there isa you know one small thing that we'redoing and including an extra true at thevery beginning even though that's notreally true right like if if you end uphaving an empty stringobviously you can't split your wordsthis way but the point of having thetrue at the very end is just that whenwe want to compare the entire string andsee if it's within our set we want to dothat in that case right without havingto include additional logic right if Iwere to continue when I get to say bookwhere I would have just this and I getpulled oh oh this is a lot check where Icheck for Facebook I would see that atposition 0 1 2 3 4 there's a true rightso what I'm going to do is say ok up tos of floorthe answer was true now is f of 4 to mycurrent end in the dictionaryif it is then my ass of you know mysolutions I think comes true right andthat I continue we good yeah at the veryend I should just be able to return youknow return solutions and where n islinked to you know I determine if theentire question that we care about istrue or false interested yeah I thinkthat approach should walk oneinteresting question outcomes - in thisscenario how do you deal with so you cansplit Facebook interface and book butyou might have to be able to guessFacebook all right because that was aworld in your dictionary right sobecause we only care whether it can beyou know separated and not what theactual contents are it doesn't reallymatter for us and if we're ready to makethis more interesting where you knowinstead of greens Facebook like this youhave something right it's just whatwould you an interesting example hereobviously I got like if you have ananimal yeah yeah sure so yeah so whatwould happen in that case is a my twentyfive are our array it would check thetrue value here but then when it triesto check online 21 is 29 it's solutionsevent is you know we're sorry ask fromFlorida and it's in the dictionaryyou'll actually get that great and sothen we keep going back and can we getto index 0 so now finally we'll check iss of 0and here you'll see that that's Facebookand soda because true okay yeah so yeahI think that's definitely greateducation you wanna like ready andthere's good I think you know as you seethis video petunia here to optimizethings in the paper state you started inthe first code- as space separated which is just goingto take a string s and it's also goingto take where is it worth it right soI'm assuming here that a word dick isactually just a set or a map instead ofa list that we have you know an averageBig O of one lookups and then I have myyou know ten separate is just going tobe false for us both for each of theindices range n plus 1 and then we saidcan separate variability so what we saidwe were going to do is have a force thatgoes into the range of n plus 1 and webasically want to determine whether youcan make a you know a solution to thispoint right and then the other thing wehave is separate inner loop which isgoing to go from 4 minus 1 until 0 and Iguess just some context for this codewith the negative 1 negative 1 it'sbasically saying start from the positionbehind forward go until index 0 and goback by 1 each time so it's just areverse way cool sowhat we wanted to say is if and separateat awkward in that case this is apossible place that you'd want to checkand see if you know the thing thatthere's a new substring form from thispoint so if s backwards go forward andwe're dicks and we can pretty much breakout right of the entire forward loop solet's see I can't really break fullyright so fix after let's just say that10 separate for decades equals true thenI guess you can have a small littlecheck that stopped you know repeatedlooks pretty lean that case of great sothere's definitely some problems withthis already that I can notice the onewe definitely want to start fromposition one instead of position zerojust right there is no you know there isno string going from zero to zero rightor negative one to zero that would be anerror and then another thing to accountfor might be I was thinking if you justhad you know the final say Facebookwhere we have two compared to zero rightdoes that code actually run I thinkafter we made the one fix it should sothe inner loop where we say if canseparate on backwards that will run nowguaranteed on every loop of forward yeahthat looks to be okay then we want toreturn and separate of n so the easiestthing to do would probably either justrun a you know reason through a testcase for thisbecause this does seem to be thetranslation of the idea we had theactual code let's go again with Facebookand then we have face book or it getsmore interesting we just use the youknow incorrect book spelling so startingoff our n is going to be set to eightbased on the length of the stringthere's an edge case from our handlinghere of an empty string but I think theit's guaranteed that it's non emptywords right yeah it says given a nonempty string so we don't really have tohandle that in the actual code so rightI have n is 8 I made ten separate end upbeing false times nine and I set theinitial Ken separated 0 to true so Istarted looking at F and I say mybackward is equal to zero and tenseparate of one is still not true so Idon't break and ten separate of backwardis true I check if F is on the word dictit isn't the backward loop is nowcomplete because the next value would beout of the range and so forth moves toyou know FA right not forward with FAword moves to two so that now I'mlooking at the substring FA it should bethe same logic that goes through to saythat FA is not in the string the onlything that seems to change is that now Ihave multiple loops of backwards so thefirst time my backward is equal to oneis that what I would want yeah it wouldbecause then that means that my firstsubstring is just a without the F andthen on the second loop my backward isgoing to be zero which is going to begive mepay and neither of those are in worddict so one thing that seems to be okayin everyone I was gonna say one thingthat seemed like it was an issue is thatI'm it seems like I'm disregardingprevious characters but if I only update10 separate or forward in the case thatI can create a you know in case I dohave a solution from the backward stringso actually the a substring I don't evenlook at thatI'd only look at FA and then so the nextlooper forward I look at FAC next lupaforwardI look at FAC II and now I finally findmy backward should be 0 my forward fromthe previous reasoning was 5 yeah thatwould be what I'd want and the seems tocheck out yeah so I'm pretty confidentthat for the next loop through this isgoing to run as intended as well becauseI don't really see any strange you knowoff by ones with the with the backwardpointer is it ok if I actually run thiscode sure yeah super secret one secondso we're just going to print separated Idon't see what that gets us I forgot itwell I apologize for thatKumud either one was mostly interestingaccording yeah so I was going to sayyeah keep it secret from our testingwhoopsy and cut this one's name worddick is not defined strange did I notjust define it right here expelling aspellingokay so this one gave me true as I'dwant book should also give me true nowif I tryLuke without Facebook they should returnto me false yeah so let's think of somebetter test cases I have obviously theone word it can be split multiple timeswhere the final word is a valid string Isee here when it's you know the lastword isn't correct or isn't part of oursolution it returns false ended I couldtry and reverse that that maybe insteadof face being the correct word maybe thelast word is correct and part of averdict and this should give false andit does we don't have to care about thenun or empty string so another thingmaybe to look at is the edge case of asingle string see that we don't have anyout of bounds with our array so that'sokay with SC teen book since returningfalse is intended and when we only havea this returns true is intended so Ithink this is pretty okay and this willbe my final solution you know thosegreat Honecker one of those case whatabout the case where you have the wordthat you know almost completed in thedictionary so let me try something likenow Apple and the other one is just letme spell Apple this way and you'retrying to look for just pop off a go gothis one is right so this should returnfalse and we get that intendedbut now what if you trying to think ofMedicaid here so instead of doing thatyou want to see if it tried to merge itgreedily so alcohol this we should workwith this unit work Australia thatshould return false we should look atthat because we're never going to hitthat condition on line forty-six rightright and the last test did with thisover like this and that should returntrue right because it's NAPL and theneat cool so that one also works outgreatperfect can you speak to the kind ofcomplexity of this yeah so if we justlook at the loops that ends up being Nsquared there is an additional cost interms of the subscripting but I thinkwhen you think about the problem it'sstill instead of being n cubed is stilltreated as N squareddespite the the lookups because I I'mthinking that maybe this is specific tohow it's implemented in Python and inother languages you shouldn'tnecessarily have to you know do a Big Oof n operation to get some substring youI I guess even in yeah you should beable to append and remove items in orderto get a string right is what I'mthinking in other languages is this justone of those to a certain amountyeah that ends up being a big of s or anoperation we're doing forming you knowthink of 10 squared from loosebut because we're doing this thing wherewe're just subscripting that ends upbeing an additional cost but so I guessit is original clothes you printing isalso constrain that you turn to mush wecan assume that the string is trivial wefigured compared to the dictionary thatyou're trying to look into so it'sactually that should be more like aconstant time right right okay sure ifthe yeah I guess I'd leave it at the Nsquared then and then the spacecomplexity for this ends up just being agirlfriend collection where n is thelength array or in the Train great um soI guess the follow-up question to thiswould be what if we will make this a bitmore interesting and we need to actuallyturn really discreet if you need toactually return all of the string wellso instead of returning true or falseyou would return both face book andFacebook so let's say a previous examplefirst paper and then in that case you'resaying it would be face book like thatright exactlyI see right so I want to say that Iactually this problem I had as part of ahomework for my algorithms problem fromalgorithms class recently so this one'salso really familiarI didn't haven't done it for aninterview ever but this was part of myassignment set for something we had tohand in will do for you comfortablegoing for this now so I I guess I'dprefer another one because I can kind ofReason how to do this one recursively Iremember that you're supposed to say uselike a a cache or you're supposed tomemorize to remember what all of thepossible solutions are at each of theindices and then basically what youwould have to do is go through say likepicking at each index can you add sometail that also is you know inside ofyou'd pick a string from I to J and youwould see if that's a word if it is youadd that along with some tail value orsome head value depending on which wayyou traverse and include that in youryou know results that I don't know tomake sense it I think I understand soquickly very green which would you becomfortable wine in this specific holewhat yeah so I guess if we were just ifwe were leaving in pseudocodeI pretty much have say some solutionswhich is going to end up equaling youknow a list for each of the indices okit what is ityeah list for since even range and +1for its end I might have to apply oneand then you can say that the solutionsof 10 plus 1 is just equal to a list ofa single string which is just emptystring and then let's say you had that'syes so on hinge is one of these all tozero to find all of the solutions thatyou get up 2.0 and then you see oh Ishould change this around this issupposed to be a map whoops okay youknow and not in solutions then you wouldgo through soul and otherwise you returnSushil pins which point you say thatsolution is equal to along a pretty longlist comprehension where it's somethinglike s from i to j plus and tailsomething like that if s is j and worddictfor J in range of so this is likedefinitely pretty wrong code but it'saround generally this idea just right Iremember the list comprehension was twonested for-loops you have a j as well asi think maybe something like for scalein solutions okay is something like thati may have to be order completelyreversed is this kind of make sensehelloyes re owes you know sorry I was on muteI think you're on the right track youtrying to keep track of studentcharacters in I believe for a Tischpositionso can you walk with this you know onthe simple example that you gave and Ithink right now I'm looking I'm seeing abit of I think an issue here so I'mgonna try to publish my handkardama be a good way to uh didn't todebug that yeah so this code isdefinitely wrong at this point in thecase like I didn't really pay attentionto the order this might actually be theopposite way around we're instead I'mdoing calls of n minus 1 or somethingbut the basic idea was supposed to bethat you for each of the indexesstarting from the very last index whatyou would want to do is determine allthe possible tails that you can havefrom that index right and then when yougo to when you try to construct a stringfrom before that position you say okaylet's see if this string Plus this tailworks out for all tails so you're justyou have your entire you know solutionset to some point or after some pointand then you're just fitting new wordsonto all possible solution sets so thatwhen you return solution 0 you'resupposed to just return you know everyvalid separation that works from index 0and onward right so I think that's thegist of it but how do you actually makethat each position that you can get tothis oh oh oh so sing that in actionsureso I guess oh so you want to convertthis into like actual running code rightyeah Oscar sweet does if you can get atleast I want to make you like write codethat well is is complete right becauseright now we don't you know how youwrong yeah so let's think about this Iguessyou know for correctness sake basicallyall I'm saying is I have oh I didn'tpick out the entire set of code justcopy the entire thing yeah say we havedeathbreak quit on hash needle in tests andthen our initial solutions is just emptywe see that n plus 1 is equal to theempty array so is that true 1 there's abug here and that supposed to be I thinka nested value because each side eateach of the solutions is supposed to bea list of list values right oh that'snot true it's just a list of stringsso the initial value like this wascorrect and what does it mean when wesay that solutions of n plus 1 is equalto just the empty string or is itsolutions of n it should be n becausethen we're saying that starting fromlet's say with Facebook starting fromposition 8 the only possible string youcan make there is just an empty stringbecause you know there's nothing thereright going from going from 8 to 8 yeahthat's just an empty string I mean it'sout of bounds really but cool so we wantto try and figure out what the possiblesplits are starting from position 0that's why we call swallow of 0 and wego through and see the end is not insolutions so we say that we're going tohave s from I to J for each of the J'sso this is supposed to call solvesomewhere that was part of the callsthat were missinginstead of solutions J put speech Soulsinside of J is one thing I think so thevery first time I think do I have toreverse the four and if here no I don'tthink so very first time we'll just haves of I 2 s of I to 1 which doesn't workout then I'll have s of I 2 2 whichdoesn't work out as if I 2 3 whichdoesn't work out none of these are goingto end up making more recursive calls ispart of the problem until I get to Jends up being what is it 7 because atthat point I should end up having that Ithink this is an off by one just becausethe J is going to be exclusive here so Ithink I have to end up with n plus 1here so that the J becomes 8 and then sof 0 to 8 is all of you know the entirestring Facebook right but there was notail when I call solve at 8 or at leastit's just an empty string so that seemslike it it ends instantly and I'm onlygetting one string but that wasn'tnecessarily true because earlier on I'mgonna look for the word face and I seethat s of i-25 isn't or dict so now Iwill call tail on 5 so that that was myfirst recursive call actually in that Ishould at f5 for J equals 5 I'll callsolve and now I have asolve is going to end up looking forstring starting from position fiveending at you know n and that using thesame logic should find me s of five toeight which gives me book is thatcorrect yeah um within a detail so Iguess one way to put this what are youdoing here because it could think aboutwhat we're trying to do exactly mighthelp you what kind of search is dayswhat kind of circle sure yeah like bycalling this because we are you doinglike yeah it's basically searching forthe for the substring is right like Ithink it might help you to think aboutit in terms of you're doing it it depthso I think it's probably closer to a DFSright if anything because it goes allthe way down to the deepest levels andthen kind of back tracks from yes so theto me it seems like this it's kind ofokay reasoning through the you know theboundaries that I have the one thingthough that might be wrong is to plus onthe tail I don't know if that yeah thereis an error here so I'm not adding anyspaces I think I can do tail and what doyou soon oh so tail is pretty much theentire list of strings that are splitafter some position your universe set ofstrings sorry I mean I don't see thosevariables initialized uh component so ifyou called out literally shapes on mindeighty-four so this is an entire largelist comprehensionall right a little will be initializedyeah cooldoes it hurt if I try and run this on anactual example just see where potentialbugs are sure okayso print weird then I guess I can justcopy this over Oh changed it invalidsyntax Ohso it may be the other way around Ialways get but I think the four has tocome firstnd if I thought to find just click Ihear cool so that actually worked outyeah on the first example one thing thatwe probably want to change around toexpand on our test cases is a what if weseparate you know look right into twomultiple words that should become ourcart solution yeahso this also seems to work out I don'tthink we had any constraint set for nonempty strings did we I don't know Ithink we can assume that we don't needto worry oh that got nology strings okaysureso the repeats thinking of test casesit seems like one split is okay is yoursplits is okayyou know faulty end splits one thingthough it might be helpful to check isif I were to have a single letter maybejust to check for potential boundarycases so there's there's two versions ofthat one is I just have the same letterrepeating over and over again and thenthe other one should be that I just havethe item repeating once so this onedoesn't seem to work out where I split amultiple oh that's have a typo okay soit does seem to work out and it gives me1 2 3 4 5 6 7 8 that does match up withwhat I have would want to check as wellas it just works for a single a cool andan improvement would probably be if Ican't do any splits at all so let's sayI have e or better yet I just use myprevious word dick and call it zebra andsee how that splits and we got an emptylist which is correctas soon as we add like say okay at theend that should still be incorrect thatshould still be an empty list cool so Ithink that ends up being my biggest setof test cases and I will leave that asmy solution yeah I think they shouldwalk you know this is greatand the complexity of the templeactually would be yeah this is a prettyhuge let's um think about this justbecause I am doing a backtrack for youknow every single index rightlet's think about it so if I want to getthe solutions at index zero I end upfirst you know going through all of theindices at least once and then from eachof the indices I end up going to everyfurther index so that in itself is Nsquared but the list comprehension stepitself is going to take quite a bit oftime it's not constant right but I don'tknow how to you know model the the tailstep as part of the input like it's it'sdependent on the word dictionary is whatit seems like let's say that D is themaximum number of tails we get footingwhich case our run time complexity is dtimes time squaredyeah as an optimization one of thethings I could do is actually check whatthe longest length word inside of mydictionary is and say that the maximumrange that I can have for J is actuallynot going to be you know I 2 n plus 1but it's going to be based on themaximum length even though complexitywise that's the same thing I think inpractice that's going to end up havingpretty significant speed improvementswe're using that because when we thinkof really long you know giant let's sayand you know 20,000 characters right butlet's say that the longest word is a 16characters in that case instead ofiterating through all the way to Jequals 20,000 you're only going toiterate to J equals I plus 16right alright so if I'm like you knowmine is equal to max of word and thenuse that in my you know for loop for gaythen basically you don't have to betwisting the whole time and you can justsuch a match that yeah damn right allrightyou have to pre-compute that length wemean less effectively before you startso you're paying that cost wouldn'tstill be worth it I guess it dependsright so if it turns out that you'rewhat's called it depends on which one issignificantly larger so if your string sis the size of it is significantlylonger than the number of entries thatyou have inside of or dick then possiblyit's worth it if both of them are smallit doesn't really matter because it'llbe fast no matter what if it turns outthat your s is pretty small and yourword dick is giant then in that caseit's not worth it right so you know onething you could do is you know have acheck if you really wanted to optimizethis and see which one of the of them islong the lenovo dicks or s by someconstant factor if you care to thatoperation itself will be constant timeright so yeah okay so let's assume thatsomehow that's constants system allstring you don't worry about that sowhat is the complexity then if for whatif we have a small string yesand all of the mainline Long's workoh right yeah yeah so I think for thatit ends up being what we had beforewhere it's D times you know squaredgreat[Applause]and this basically the city yeah I guessthat ends up being n times D right justbecause at max you're storing this Dnumber at each of the indices andthere's n such indices boom all right umI think we are almost at the end of thehour we can do another example if youwantI guess maybe use this time to dodifferent type of questions I've beenthrough the interview loop recently it'scompetitive area so if you havequestions around that most likely toanswer that sure I guess maybe one wayto study is what are you measuring inright now computer science okay computersounds like and um when I you looking touh to find a new job are youinterviewing right now yes yes I'minterviewing at a couple of places andfor me I'm actually finishing classes uhyou know January mainly starting in likeApril yeah cool what kind of I guess prepre to let me know if you're notcomfortable in three days but whatdomain are you know area are youinterested in finding a new job is ityeah it mobile is back in full startyeah let's say it's mainly a back andwork usually that's probably yeah Iguess strength plus interests are theregotchaand would youinterested in enjoying like you have anycompanies in mind that will beinteresting joinings specifically maybeI can help with that so one thing ismaybe I think we could probably talkabout this after the recording becausefor what I get everything inside ofthese chats are supposed to be kind ofanonymous right right it's cuz they'reup they are all right I feel free to notuse anything that can you know identifyyou you know we can talk about names ofcompany themselves but if you'recomfortable doing that after these justlots of timesbasically this is this is really greatyeah I'm I'm very impressed and I loveto have you on my teamso yeah let's try to connect at Aliciasure I guess thank you for your timethis is uh the first question was Ifriggin I am pretty sure I did it beforelike I mentioned but it's so unfamiliarenough that you have to reason throughit yeah and thanks for working for thesecond part of the program it's a bitmore challenging but I think itdefinitely helps you know hemorrhagedsome concepts so yeah cooltake your time as well and good luckyeah thanks and every day and we canchat after oh great